# Copyright (C) 2021 Torbjorn Sjostrand.
# PYTHIA is licenced under the GNU GPL v2 or later, see COPYING for details.
# Please respect the MCnet Guidelines, see GUIDELINES for details.
# Author: Philip Ilten, October 2019.
# Dockerfile for building the Python binding for Pythia 8.3.
FROM fedora:30
MAINTAINER Pythia 8 Collaboration "pythia8@projects.hepforge.org"

# Set environment variables.
ENV GIT git clone --depth 1
ENV SVN svn co --username anonymous --password anonymous
ENV HEPMC2_DIR /root/hepmc2
ENV HEPMC2_GIT -b HEPMC_02_06_10 https://gitlab.cern.ch/hepmc/HepMC.git
ENV HEPMC3_DIR /root/hepmc3
ENV HEPMC3_GIT -b 3.1.2 https://gitlab.cern.ch/hepmc/HepMC3.git
ENV PHOTOS_URL http://photospp.web.cern.ch/photospp/resources
ENV PHOTOS_VER PHOTOS.3.61
ENV PHOTOS_DIR /root/photos
ENV TAUOLA_URL http://tauolapp.web.cern.ch/tauolapp/resources
ENV TAUOLA_VER TAUOLA.1.1.6c
ENV TAUOLA_DIR /root/tauola
ENV PYTHIA_GIT -b pythia8243 https://gitlab.com/Pythia8/releases.git
ENV PYTHIA_DIR /root/pythia
ENV EVTGEN_GIT -b R01-07-00 http://phab.hepforge.org/source/evtgen.git
ENV EVTGEN_DIR /root/evtgen
ENV FASTJET3_URL http://fastjet.fr/repo
ENV FASTJET3_VER fastjet-3.3.2
ENV FASTJET3_DIR /root/fastjet3
ENV FJCNTRB_URL https://fastjet.hepforge.org/contrib/downloads
ENV FJCNTRB_VER fjcontrib-1.042
ENV FJCNTRB_DIR /root/fjcntrb
ENV LHAPDF5_URL https://lhapdf.hepforge.org/downloads?f=old
ENV LHAPDF5_VER lhapdf-5.9.1
ENV LHAPDF5_DIR /root/lhapdf5
ENV LHAPDF5_SRC https://lhapdf.hepforge.org/downloads?f=pdfsets/5.9.1
ENV LHAPDF5_SET MRST2001lo.LHgrid cteq5l.LHgrid cteq61.LHpdf cteq61.LHgrid\
 MRST2004nlo.LHgrid MRST2004qed.LHgrid NNPDF23_nlo_as_0119_qed.LHgrid\
 NNPDF23_nnlo_as_0119_qed.LHgrid cteq6ll.LHpdf cteq6m.LHpdf
ENV LHAPDF6_URL https://lhapdf.hepforge.org/downloads?f
ENV LHAPDF6_VER LHAPDF-6.2.3
ENV LHAPDF6_DIR /root/lhapdf6
ENV LHAPDF6_SRC http://lhapdfsets.web.cern.ch/lhapdfsets/current
ENV LHAPDF6_SET CT10 CT10nlo NNPDF31_nnlo_as_0118_luxqed PDF4LHC15_nlo_asvar\
 CT14qed_proton cteq6l1 cteq6 NNPDF23_nlo_as_0119_qed NNPDF23_nnlo_as_0119_qed
ENV POWHEG_SVN svn://powhegbox.mib.infn.it/trunk/POWHEG-BOX-V2
ENV POWHEG_USR svn://powhegbox.mib.infn.it/trunk/User-Processes-V2/
ENV POWHEG_PRO hvq
ENV POWHEG_DIR /root/powheg
ENV YODA_URL https://yoda.hepforge.org/downloads/?f
ENV YODA_VER YODA-1.8.3
ENV YODA_DIR /root/yoda
ENV RIVET_URL https://rivet.hepforge.org/downloads/?f
ENV RIVET_VER Rivet-3.1.4
ENV RIVET_DIR /root/rivet
ENV HIGHFIVE_URL https://github.com/BlueBrain/HighFive/archive
ENV HIGHFIVE_VER 2.2
ENV HIGHFIVE_DIR /root/highfive
ENV DNF_INSTALL git time svn make cmake gdb gcc-c++ gcc-fortran rsync\
 zlib-devel valgrind hdf5-mpich-devel
ENV HEP_DIR /hep

# Create the HEP directory.
RUN mkdir $HEP_DIR

# Install dependencies.
RUN dnf -y install $DNF_INSTALL

# Install Python.
RUN dnf -y install python2-devel

# Install ROOT.
RUN dnf -y install root-core python2-root

# Build HepMC2.
RUN $GIT $HEPMC2_GIT $HEPMC2_DIR; \
mkdir build; cd build; \
cmake -Dmomentum=GEV -Dlength=MM\
 -DCMAKE_INSTALL_PREFIX=$HEP_DIR/$(basename $HEPMC2_DIR)\
 $HEPMC2_DIR $CMAKE_INSTALL; \
make -j4; make -j4 install; cd /; rm -rf build $HEPMC2_DIR

# Build HepMC3.
RUN $GIT $HEPMC3_GIT $HEPMC3_DIR; \
mkdir build; cd build; \
cmake $HEPMC3_DIR -DCMAKE_INSTALL_PREFIX=$HEP_DIR/$(basename $HEPMC3_DIR)\
 $CMAKE_INSTALL; \
make -j4; make -j4 install; cd /; rm -rf build $HEPMC3_DIR

# Build PHOTOS for EvtGen.
RUN curl -OL $PHOTOS_URL/$PHOTOS_VER/$PHOTOS_VER.tar.gz; \
tar -xzf $PHOTOS_VER.tar.gz; \
mv PHOTOS $PHOTOS_DIR; \
cd $PHOTOS_DIR; \
./configure --with-hepmc=$HEP_DIR/$(basename $HEPMC2_DIR)\
 --prefix=$HEP_DIR/$(basename $EVTGEN_DIR); \
make -j4; make install; cd /; rm -rf $PHOTOS_DIR $PHOTOS_VER.tar.gz

# Build TAUOLA for EvtGen.
RUN curl -OL $TAUOLA_URL/$TAUOLA_VER/$TAUOLA_VER.tar.gz; \
tar -xzf $TAUOLA_VER.tar.gz; \
mv TAUOLA $TAUOLA_DIR; \
cd $TAUOLA_DIR; \
./configure --with-hepmc=$HEP_DIR/$(basename $HEPMC2_DIR)\
  --prefix=$HEP_DIR/$(basename $EVTGEN_DIR); \
make -j1; make install; cd /; rm -rf $TAUOLA_DIR $TAUOLA_VER.tar.gz

# Build Pythia 8 version for EvtGen.
RUN $GIT $PYTHIA_GIT $PYTHIA_DIR; cd $PYTHIA_DIR; \
./configure --prefix=$HEP_DIR/$(basename $EVTGEN_DIR); \
make -j4; make install; cd /; rm -rf $PYTHIA_DIR

# Build EvtGen.
RUN $GIT $EVTGEN_GIT $EVTGEN_DIR; cd $EVTGEN_DIR; \
./configure --prefix=$HEP_DIR/$(basename $EVTGEN_DIR)\
 --hepmcdir=$HEP_DIR/$(basename $HEPMC2_DIR)\
 --photosdir=$HEP_DIR/$(basename $EVTGEN_DIR)\
 --pythiadir=$HEP_DIR/$(basename $EVTGEN_DIR)\
 --tauoladir=$HEP_DIR/$(basename $EVTGEN_DIR); \
sed -i "s|FLIBS|#FLIBS|g" config.mk; \
make -j1; make install; cd /; rm -rf $EVTGEN_DIR

# Build FastJet3.
RUN curl -OL $FASTJET3_URL/$FASTJET3_VER.tar.gz; \
tar -xzf $FASTJET3_VER.tar.gz; \
mv $FASTJET3_VER $FASTJET3_DIR; \
cd $FASTJET3_DIR; \
./configure --prefix=$HEP_DIR/$(basename $FASTJET3_DIR)\
 --enable-shared --enable-allplugins; \
make -j4; make install; cd /; rm -rf $FASTJET3_DIR $FASTJET3_VER.tar.gz

# Build FastJet3 contributions.
RUN curl -OL $FJCNTRB_URL/$FJCNTRB_VER.tar.gz; \
tar -xzf $FJCNTRB_VER.tar.gz; \
mv $FJCNTRB_VER $FJCNTRB_DIR; \
cd $FJCNTRB_DIR; \
./configure --prefix=$HEP_DIR/$(basename $FASTJET3_DIR)\
 --fastjet-config=$HEP_DIR/$(basename $FASTJET3_DIR)/bin/fastjet-config; \
make -j4; make install; make fragile-shared-install; \
cd /; rm -rf $FJCNTRB_DIR $FJCNTRB_VER.tar.gz

# Build LHAPDF5.
RUN curl -L -o $LHAPDF5_VER.tar.gz $LHAPDF5_URL/$LHAPDF5_VER.tar.gz; \
tar -xzf $LHAPDF5_VER.tar.gz; \
mv $LHAPDF5_VER $LHAPDF5_DIR; \
cd $LHAPDF5_DIR; \
export FCFLAGS="-std=legacy"; export CXXFLAGS="-Wno-format-security"; \
./configure --prefix=$HEP_DIR/$(basename $LHAPDF5_DIR); \
make -j4; make install; cd /; rm -rf $LHAPDF5_DIR $LHAPDF5_VER.tar.gz

# Download the needed LHAPDF5 PDF sets.
RUN mkdir -p $HEP_DIR/$(basename $LHAPDF5_DIR)/share/lhapdf/PDFsets; \
for SET in $LHAPDF5_SET; do curl -OL $LHAPDF5_SRC/$SET; \
mv $SET $HEP_DIR/$(basename $LHAPDF5_DIR)/share/lhapdf/PDFsets/; \
rm -rf $SET.tar.gz; done

# Build LHAPDF6.
RUN curl -L -o $LHAPDF6_VER.tar.gz $LHAPDF6_URL=$LHAPDF6_VER.tar.gz; \
tar -xzf $LHAPDF6_VER.tar.gz; \
mv $LHAPDF6_VER $LHAPDF6_DIR; \
cd $LHAPDF6_DIR; \
./configure --prefix=$HEP_DIR/$(basename $LHAPDF6_DIR); \
make -j4; make install; cd /; rm -rf $LHAPDF6_DIR $LHAPDF6_VER.tar.gz

# Download the needed LHAPDF6 PDF sets.
RUN curl -L -o $HEP_DIR/$(basename $LHAPDF6_DIR)/share/LHAPDF/pdfsets.index\
 $LHAPDF6_SRC/pdfsets.index; \
for SET in $LHAPDF6_SET; do curl -OL $LHAPDF6_SRC/$SET.tar.gz; \
tar -xzf $SET.tar.gz; mv $SET $HEP_DIR/$(basename $LHAPDF6_DIR)/share/LHAPDF/; \
rm -rf $SET.tar.gz; done

# Build PowhegBox.
RUN $SVN $POWHEG_SVN $POWHEG_DIR; \
cd $POWHEG_DIR; \
$SVN $POWHEG_USR/$POWHEG_PRO; cd $POWHEG_PRO; \
sed -i 's/^ *PDF *=.*/PDF=lhapdf/g' Makefile; \
sed -i 's/^ *COMPILER=.*/COMPILER=gfortran/g' Makefile; \
sed -i 's/\(CXX= *g++.*\)\( -rfPIC\)*/\1 -fPIC/g' Makefile; \
sed -i 's/\(F77= *gfortran.*\)\( -rdynamic\)*/\1 -rdynamic -fPIE -fPIC -pie -ffixed-line-length-none\'$'\n''CXX = g++ -fPIC/g' Makefile; \
export PATH=$PATH:$HEP_DIR/$(basename $LHAPDF6_DIR)/bin/; \
make -j4; mkdir -p $HEP_DIR/$(basename $POWHEG_DIR); \
cp pwhg_main $HEP_DIR/$(basename $POWHEG_DIR)/$POWHEG_PRO; \
cd /; rm -rf $POWHEG_DIR

# Build Yoda.
RUN curl -L -o $YODA_VER.tar.gz $YODA_URL=$YODA_VER.tar.gz; \
tar -xzf $YODA_VER.tar.gz; \
mv $YODA_VER $YODA_DIR; \
cd $YODA_DIR; \
./configure --prefix=$HEP_DIR/$(basename $YODA_DIR); \
make -j4; make install; cd /; rm -rf $YODA_DIR $YODA_VER.tar.gz

# Build Rivet.
RUN curl -L -o $RIVET_VER.tar.gz $RIVET_URL=$RIVET_VER.tar.gz; \
tar -xzf $RIVET_VER.tar.gz; \
mv $RIVET_VER $RIVET_DIR; \
cd $RIVET_DIR; \
./configure --prefix=$HEP_DIR/$(basename $RIVET_DIR)\
 --with-yoda=$HEP_DIR/$(basename $YODA_DIR)\
 --with-hepmc=$HEP_DIR/$(basename $HEPMC2_DIR)\
 --with-fastjet=$HEP_DIR/$(basename $FASTJET3_DIR); \
make -j4; make install; cd /; rm -rf $RIVET_DIR $RIVET_VER.tar.gz

# Build HighFive.
RUN curl -OL $HIGHFIVE_URL/v$HIGHFIVE_VER.zip; \
unzip v$HIGHFIVE_VER.zip; \
mkdir -p $HEP_DIR/$(basename $HIGHFIVE_DIR); \
mv HighFive-$HIGHFIVE_VER/include $HEP_DIR/$(basename $HIGHFIVE_DIR)/include; \
rm -rf v$HIGHFIVE_VER.zip HighFive-$HIGHFIVE_VER

# Set up MPICH and HDF5.
RUN mkdir -p $HEP_DIR/mpich; \
cd $HEP_DIR/mpich; \
ln -s /usr/lib64/mpich/bin/ bin; \
ln -s /usr/lib64/mpich/lib lib; \
ln -s /usr/include/mpich-x86_64 include