diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/include/Pythia8/LesHouches.h new/include/Pythia8/LesHouches.h
--- old/include/Pythia8/LesHouches.h	2020-04-13 16:32:04.919417569 +0100
+++ new/include/Pythia8/LesHouches.h	2020-04-13 16:45:43.735207190 +0100
@@ -484,7 +484,7 @@ class LHAupFromPYTHIA8 : public LHAup {
 public:
 
   // Constructor.
-  LHAupFromPYTHIA8(Event* processPtrIn, Info* infoPtrIn) {
+  LHAupFromPYTHIA8(Event* processPtrIn, InfoHub* infoPtrIn) {
     processPtr = processPtrIn; infoPtr = infoPtrIn;}
 
   // Destructor.
@@ -503,7 +503,7 @@ private:
 
   // Pointers to process event record and further information.
   Event*   processPtr;
-  Info* infoPtr;
+  InfoHub* infoPtr;
 
 };
 
@@ -518,7 +518,7 @@ public:
 
   // Constructor.
   LHEF3FromPythia8(Event* eventPtrIn, Settings* settingsPtrIn,
-    Info* infoPtrIn, ParticleData* particleDataPtrIn, int pDigitsIn = 15,
+    InfoHub* infoPtrIn, ParticleData* particleDataPtrIn, int pDigitsIn = 15,
     bool writeToFileIn = true) :
     eventPtr(eventPtrIn),settingsPtr(settingsPtrIn),
     infoPtr(infoPtrIn), particleDataPtr(particleDataPtrIn), writer(osLHEF),
@@ -545,7 +545,7 @@ private:
 
   // Pointer to settings and info objects.
   Settings* settingsPtr;
-  Info* infoPtr;
+  InfoHub* infoPtr;
   ParticleData* particleDataPtr;
 
   // LHEF3 writer
diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/include/Pythia8/Pythia.h new/include/Pythia8/Pythia.h
--- old/include/Pythia8/Pythia.h	2020-04-13 16:32:04.919417569 +0100
+++ new/include/Pythia8/Pythia.h	2020-04-13 16:32:05.027418613 +0100
@@ -291,13 +291,13 @@ public:
   BeamParticle   beamA = {};
   BeamParticle   beamB = {};
 
-private:
-
   // The main keeper/collector of information, accessible from all
   // PhysicsBase objects. The information is available from the
   // outside through the public info object.
   InfoHub         infoHub = {};
 
+private:
+
   // Initialise new Pythia object (called by constructors).
   void initPtrs();
 
diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/Makefile new/Makefile
--- old/Makefile	2020-04-13 16:32:04.867417066 +0100
+++ new/Makefile	2020-04-13 16:32:04.979418149 +0100
@@ -31,7 +31,7 @@ LOCAL_SHARE=share/Pythia8
 LOCAL_SRC=src
 LOCAL_TMP=tmp
 LOCAL_MKDIRS:=$(shell mkdir -p $(LOCAL_TMP) $(LOCAL_LIB))
-CXX_COMMON:=-I$(LOCAL_INCLUDE) $(CXX_COMMON)
+CXX_COMMON:=-I$(LOCAL_INCLUDE) $(CXX_COMMON) -std=c++11
 
 # PYTHIA.
 OBJECTS=$(patsubst $(LOCAL_SRC)/%.cc,$(LOCAL_TMP)/%.o,\
diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/private/tests/test008.cc new/private/tests/test008.cc
--- old/private/tests/test008.cc	2020-04-13 16:32:04.931417685 +0100
+++ new/private/tests/test008.cc	2020-04-13 16:45:52.999294486 +0100
@@ -47,7 +47,7 @@ int main() {
 
   // Shorthand for some public members of pythia (also static ones).
   Settings& settings = pythia.settings;
-  const Info& info = pythia.info;
+  const InfoHub& info = pythia.info;
 
   // Optionally limit output to minimal one.
   if (smallOutput) {
diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/private/tests/test020.cc new/private/tests/test020.cc
--- old/private/tests/test020.cc	2020-04-13 16:32:04.931417685 +0100
+++ new/private/tests/test020.cc	2020-04-13 16:46:03.107389724 +0100
@@ -23,7 +23,7 @@ int main() {
   pythia.readString("PartonLevel:all = off");
 
   // Create an LHAup object that can access relevant information in pythia.
-  LHAupFromPYTHIA8 myLHA(&pythia.process, &pythia.info);
+  LHAupFromPYTHIA8 myLHA(&pythia.process, &pythia.infoHub);
 
   // Open a file on which LHEF events should be stored, and write header.
   myLHA.openLHEF("weakbosons.lhe");
diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/private/tests/test061.cc new/private/tests/test061.cc
--- old/private/tests/test061.cc	2020-04-13 16:32:04.931417685 +0100
+++ new/private/tests/test061.cc	2020-04-13 16:46:15.087502584 +0100
@@ -17,7 +17,7 @@ int main() {
   // Create Pythia instance. Shorthand for event and info.
   Pythia pythia;
   Event& event = pythia.event;
-  const Info& info = pythia.info;
+  const InfoHub& info = pythia.info;
 
   // Set it up to generate Z's at 8 TeV.
   pythia.readString("Beams:eCM = 8000.");
diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/private/tests/test068.cc new/private/tests/test068.cc
--- old/private/tests/test068.cc	2020-04-13 16:32:04.931417685 +0100
+++ new/private/tests/test068.cc	2020-04-13 16:46:23.927585853 +0100
@@ -16,7 +16,7 @@ int main() {
 
   // Create Pythia instance. Shorthand for event and info.
   Pythia pythia;
-  const Info& info = pythia.info;
+  const InfoHub& info = pythia.info;
 
   // Set it up to generate dijets at HERA.
   pythia.readString("Beams:frametype = 2");    // Beams with different energies
diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/private/tests/test112.cc new/private/tests/test112.cc
--- old/private/tests/test112.cc	2020-04-13 16:32:04.931417685 +0100
+++ new/private/tests/test112.cc	2020-04-13 16:46:34.319683731 +0100
@@ -119,8 +119,8 @@ int main() {
 
     // Also fill the number of (absorptively and diffractively)
     // wounded nucleaons.
-    int nw = pythia.info.hiInfo->nAbsTarg() +
-      pythia.info.hiInfo->nDiffTarg();
+    int nw = pythia.info.hiinfo->nAbsTarg() +
+      pythia.info.hiinfo->nDiffTarg();
     wounded.fill(nw, weight);
 
     // Find the correct centrality histograms.
diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/src/LesHouches.cc new/src/LesHouches.cc
--- old/src/LesHouches.cc	2020-04-13 16:32:04.971418073 +0100
+++ new/src/LesHouches.cc	2020-04-13 16:46:57.891905701 +0100
@@ -1280,20 +1280,20 @@ bool LHEF3FromPythia8::setInit() {
   heprup.LPRUP = LPRUP;
 
   // Contents of the LHAinitrwgt tag
-  if (infoPtr->initrwgt() )
-    heprup.initrwgt = *(infoPtr->initrwgt());
+  if (infoPtr->initrwgt )
+    heprup.initrwgt = *(infoPtr->initrwgt);
 
   // Contents of the LHAgenerator tags.
-  if (infoPtr->generators())
-    heprup.generators = *(infoPtr->generators());
+  if (infoPtr->generators)
+    heprup.generators = *(infoPtr->generators);
 
   // A map of the LHAweightgroup tags, indexed by name.
-  if (infoPtr->weightgroups())
-    heprup.weightgroups = *(infoPtr->weightgroups());
+  if (infoPtr->weightgroups)
+    heprup.weightgroups = *(infoPtr->weightgroups);
 
   // A map of the LHAweight tags, indexed by name.
-  if (infoPtr->init_weights())
-    heprup.weights = *(infoPtr->init_weights());
+  if (infoPtr->init_weights)
+    heprup.weights = *(infoPtr->init_weights);
 
   // Get init information.
   writer.version = 3;
@@ -1541,28 +1541,28 @@ bool LHEF3FromPythia8::setEvent(int) {
   hepeup.heprup = &heprup;
 
   // The weights associated with this event, as given by the LHAwgt tags.
-  if (infoPtr->weights_detailed())
-    hepeup.weights_detailed               = *(infoPtr->weights_detailed());
+  if (infoPtr->weights_detailed)
+    hepeup.weights_detailed               = *(infoPtr->weights_detailed);
 
   // The weights associated with this event, as given by the LHAweights tags.
-  if (infoPtr->weights_compressed())
-    hepeup.weights_compressed             = *(infoPtr->weights_compressed());
+  if (infoPtr->weights_compressed)
+    hepeup.weights_compressed             = *(infoPtr->weights_compressed);
 
   // Contents of the LHAscales tag
-  if (infoPtr->scales())
-    hepeup.scalesSave                     = *(infoPtr->scales());
+  if (infoPtr->scales)
+    hepeup.scalesSave                     = *(infoPtr->scales);
 
   // Contents of the LHAweights tag (compressed format)
-  if (infoPtr->weights())
-    hepeup.weightsSave                    = *(infoPtr->weights());
+  if (infoPtr->weights)
+    hepeup.weightsSave                    = *(infoPtr->weights);
 
   // Contents of the LHArwgt tag (detailed format)
-  if (infoPtr->rwgt())
-    hepeup.rwgtSave                       = *(infoPtr->rwgt());
+  if (infoPtr->rwgt)
+    hepeup.rwgtSave                       = *(infoPtr->rwgt);
 
   // Any other attributes.
-  if (infoPtr->eventAttributes())
-    hepeup.attributes                     = *(infoPtr->eventAttributes());
+  if (infoPtr->eventAttributes)
+    hepeup.attributes                     = *(infoPtr->eventAttributes);
 
   // Not implemented yet:
   // Write event comments of input LHEF.
