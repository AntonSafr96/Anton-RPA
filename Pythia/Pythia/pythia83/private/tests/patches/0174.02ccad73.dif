diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/include/Pythia8/ParticleData.h new/include/Pythia8/ParticleData.h
--- old/include/Pythia8/ParticleData.h	2020-04-13 11:02:15.012183884 +0100
+++ new/include/Pythia8/ParticleData.h	2020-04-13 11:12:40.034202685 +0100
@@ -154,27 +154,6 @@ public:
     atanDif(), mThr(), currentBRSum(), resonancePtr(0), particleDataPtr() {
     setDefaults(); if (toLower(antiNameIn) == "void") hasAntiSave = false;}
 
-  // Copy constructor.
-  ParticleDataEntry( const ParticleDataEntry& oldPDE) {idSave = oldPDE.idSave;
-    nameSave = oldPDE.nameSave; antiNameSave = oldPDE.antiNameSave;
-    spinTypeSave = oldPDE.spinTypeSave; chargeTypeSave = oldPDE.chargeTypeSave;
-    colTypeSave = oldPDE.colTypeSave; m0Save = oldPDE.m0Save;
-    mWidthSave = oldPDE.mWidthSave;  mMinSave = oldPDE.mMinSave;
-    mMaxSave = oldPDE.mMaxSave;  tau0Save = oldPDE.tau0Save;
-    constituentMassSave = oldPDE.constituentMassSave;
-    hasAntiSave = oldPDE.hasAntiSave; isResonanceSave = oldPDE.isResonanceSave;
-    mayDecaySave = oldPDE.mayDecaySave; doExternalDecaySave
-    = oldPDE.doExternalDecaySave; isVisibleSave = oldPDE.isVisibleSave;
-    doForceWidthSave = oldPDE.doForceWidthSave; hasChangedSave
-    = oldPDE.hasChangedSave; hasChangedMMinSave = oldPDE.hasChangedMMinSave;
-    hasChangedMMaxSave = oldPDE.hasChangedMMaxSave;
-    modeBWnow = oldPDE.modeBWnow; atanLow = oldPDE.atanLow;
-    atanDif = oldPDE.atanDif; mThr = oldPDE.mThr;
-    for (int i = 0; i < int(oldPDE.channels.size()); ++i) {
-      DecayChannel oldDC = oldPDE.channels[i]; channels.push_back(oldDC); }
-    currentBRSum = oldPDE.currentBRSum; resonancePtr = 0;
-    particleDataPtr = 0; }
-
   // Assignment operator.
   ParticleDataEntry& operator=( const ParticleDataEntry& oldPDE) {
     if (this != &oldPDE) { idSave = oldPDE.idSave;
diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/include/Pythia8/Pythia.h new/include/Pythia8/Pythia.h
--- old/include/Pythia8/Pythia.h	2020-04-13 11:02:15.012183884 +0100
+++ new/include/Pythia8/Pythia.h	2020-04-13 11:02:15.128185071 +0100
@@ -291,13 +291,13 @@ public:
   BeamParticle   beamA = {};
   BeamParticle   beamB = {};
 
-private:
-
   // The main keeper/collector of information, accessible from all
   // PhysicsBase objects. The information is available from the
   // outside through the public info object.
   InfoHub         infoHub = {};
 
+private:
+
   // Initialise new Pythia object (called by constructors).
   void initPtrs();
 
diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/private/tests/test008.cc new/private/tests/test008.cc
--- old/private/tests/test008.cc	2020-04-13 11:02:15.020183965 +0100
+++ new/private/tests/test008.cc	2020-04-13 11:02:15.136185152 +0100
@@ -47,7 +47,7 @@ int main() {
 
   // Shorthand for some public members of pythia (also static ones).
   Settings& settings = pythia.settings;
-  const Info& info = pythia.info;
+  Info& info = pythia.info;
 
   // Optionally limit output to minimal one.
   if (smallOutput) {
diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/private/tests/test112.cc new/private/tests/test112.cc
--- old/private/tests/test112.cc	2020-04-13 11:02:15.020183965 +0100
+++ new/private/tests/test112.cc	2020-04-13 11:02:15.136185152 +0100
@@ -119,8 +119,8 @@ int main() {
 
     // Also fill the number of (absorptively and diffractively)
     // wounded nucleaons.
-    int nw = pythia.info.hiInfo->nAbsTarg() +
-      pythia.info.hiInfo->nDiffTarg();
+    int nw = pythia.info.hiInfo()->nAbsTarg() +
+      pythia.info.hiInfo()->nDiffTarg();
     wounded.fill(nw, weight);
 
     // Find the correct centrality histograms.
