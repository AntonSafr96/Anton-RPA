diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/include/Pythia8/Pythia.h new/include/Pythia8/Pythia.h
--- old/include/Pythia8/Pythia.h	2020-04-12 13:56:47.945053034 +0100
+++ new/include/Pythia8/Pythia.h	2020-04-12 14:00:08.731243066 +0100
@@ -291,13 +291,13 @@ public:
   BeamParticle   beamA = {};
   BeamParticle   beamB = {};
 
-private:
-
   // The main keeper/collector of information, accessible from all
   // PhysicsBase objects. The information is available from the
   // outside through the public info object.
   InfoHub         infoHub = {};
 
+private:
+
   // Initialise new Pythia object (called by constructors).
   void initPtrs();
 
diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/private/tests/test008.cc new/private/tests/test008.cc
--- old/private/tests/test008.cc	2020-04-12 13:56:47.957053169 +0100
+++ new/private/tests/test008.cc	2020-04-12 14:05:40.674609938 +0100
@@ -47,7 +47,7 @@ int main() {
 
   // Shorthand for some public members of pythia (also static ones).
   Settings& settings = pythia.settings;
-  const Info& info = pythia.info;
+  Info& info = pythia.info;
 
   // Optionally limit output to minimal one.
   if (smallOutput) {
diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/private/tests/test020.cc new/private/tests/test020.cc
--- old/private/tests/test020.cc	2020-04-12 13:56:47.961053215 +0100
+++ new/private/tests/test020.cc	2020-04-12 14:05:40.702610212 +0100
@@ -23,7 +23,7 @@ int main() {
   pythia.readString("PartonLevel:all = off");
 
   // Create an LHAup object that can access relevant information in pythia.
-  LHAupFromPYTHIA8 myLHA(&pythia.process, &pythia.info);
+  LHAupFromPYTHIA8 myLHA(&pythia.process, &pythia.infoHub);
 
   // Open a file on which LHEF events should be stored, and write header.
   myLHA.openLHEF("weakbosons.lhe");
diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/private/tests/test112.cc new/private/tests/test112.cc
--- old/private/tests/test112.cc	2020-04-12 13:56:47.961053215 +0100
+++ new/private/tests/test112.cc	2020-04-12 14:05:40.702610212 +0100
@@ -119,8 +119,8 @@ int main() {
 
     // Also fill the number of (absorptively and diffractively)
     // wounded nucleaons.
-    int nw = pythia.info.hiInfo->nAbsTarg() +
-      pythia.info.hiInfo->nDiffTarg();
+    int nw = pythia.info.hiInfo()->nAbsTarg() +
+      pythia.info.hiInfo()->nDiffTarg();
     wounded.fill(nw, weight);
 
     // Find the correct centrality histograms.
diff -rupN -x label -x '*.orig' -x '*.rej' -x '*~' -x .git old/src/VinciaISR.cc new/src/VinciaISR.cc
--- old/src/VinciaISR.cc	2020-04-12 13:56:48.009053758 +0100
+++ new/src/VinciaISR.cc	2020-04-12 13:59:42.446964533 +0100
@@ -6250,7 +6250,7 @@ bool VinciaISR::acceptTrial(const Event&
   // of the trial scale.
 
   double alphaTrial = trialPtr->getAlphaTrial(iTrial);
-  if (isnan(alphaTrial)) cout << " alphaStrial is NAN!!!" << endl;
+  if (std::isnan(alphaTrial)) cout << " alphaStrial is NAN!!!" << endl;
   if (alphaTrial != alphaTrial) cout << " alphaStrial is != alphaStrial" << endl;
   // Scale is pT for gluon emission and m for splitting / conversion
   double mu2     = (isII ? s1j*sj2/(S12+s1j+sj2) : s1j*sj2/(S12+sj2));
